<?function getLocation($location='') {	if(!$location) return;		//******************* Try for Zip Code ******************		if(is_numeric($location)) $zip = $location;	else if(preg_match_all('/\d{5}/x', $location, $temp)) $zip = $temp[0][count($temp[0])-1];	if($zip) {		$temp = $_SERVER['serverdb']->getRow('SELECT * FROM locations WHERE zip = '.$zip);		if($temp) return($temp);	}		//*************** Try try for city state *****************		$location = trim(str_replace('  ',' ',str_replace(array(',','-','\''),' ',strtolower($location))));		$sep = strrpos($location,' ');	//Find position of last space	if(strlen($location) - $sep <= 3) $state = substr($location,$sep + 1);	//State is abbreviated	else {		$states = array ('alabama'=>'al','alaska'=>'ak','american samoa'=>'as','arizona'=>'az','arkansas'=>'ar','california'=>'ca','colorado'=>'co','conneticut'=>'ct','delaware'=>'de','district of columbia'=>'dc','federated states of micronesia'=>'fm','florida'=>'fl','georgia'=>'ga','guam'=>'gu','hawaii'=>'hi','idaho'=>'id','illinois'=>'il','indiana'=>'in','iowa'=>'ia','kansas'=>'ks','kentucky'=>'ky','lousianna'=>'la','maine'=>'me','marshall islands'=>'mh','maryland'=>'md','massachusetts'=>'ma','michigan'=>'mi','minnesota'=>'mn','mississippi'=>'ms','missouri'=>'mo','montana'=>'mt','nebraska'=>'ne','nevada'=>'nv','new hampshire'=>'nh','new jersey'=>'nj','new mexico'=>'nm','new york'=>'ny','north carolina'=>'nc','north dakota'=>'nd','northern mariana islands'=>'mp','ohio'=>'oh','oklahoma'=>'ok','oregon'=>'or','palau'=>'pw','pennyslvania'=>'pa','puerto rico'=>'pr','rhode island'=>'ri','south carolina'=>'sc','south dakota'=>'sd','tennessee'=>'tn','texas'=>'tx','utah'=>'ut','vermont'=>'vt','virgin islands'=>'vi','virginia'=>'va','washington'=>'wa','west virginia'=>'wv','wisconsin'=>'wi','wyoming'=>'wy');		if(!$states[substr($location,$sep + 1)]) 	$sep = strrpos(substr($location,0,$sep),' ');	//Find position of second to last space, as state is not found and possibly contains a space...		if(!$states[substr($location,$sep + 1)]) 	$sep = strrpos(substr($location,0,$sep),' ');	//Find position of third to last space, as state is not found and possibly contains another space...		if(!$states[substr($location,$sep + 1)]) 	$sep = strrpos(substr($location,0,$sep),' ');	//Find position of fourth to last space, as state is not found and possibly contains another space...		$state = $states[substr($location,$sep + 1)];	}	$city = substr($location,0,$sep);	//City is the other side of the space	$temp = $_SERVER['serverdb']->getRow('SELECT * FROM locations WHERE city = \''.$city.'\' AND state = \''.$state.'\'');	if($temp) return($temp);}function updateLocation($location='') {	if($location) $loc = getLocation($location);		$_SESSION['userLatitude'] 	=  $loc['latitude'];	$_SESSION['userLongitude']	=  $loc['longitude'];	$_SESSION['userTimezone'] 	=  $loc['timezone'];	$_SESSION['userDST']      	=  $loc['dst'];	$_SESSION['userCity']     	=  $loc['city'];	$_SESSION['userState']    	=  $loc['state'];	$_SESSION['userZip']  	  	=  $loc['zip'];		if($loc) return true;}function getDistance($lat1,$lon1,$lat2,$lon2) {	$x = 69.1 * ($lat1 - $lat2);	$y = 69.1 * ($lon1 - $lon2) * cos($lat2 / 57.3);	return round(sqrt($x * $x + $y * $y),1);}?>