<?//************************ Include ATIServer Framework ***************************require_once 'framework.atii';//************************** Record Time *************************$GLOBALS['constants']['pageBuildStart'] = microtime_float();//************************* Deciper Urls *************************if($_SERVER['REQUEST_PARAMS']) { //Url has embedded get data	$_SERVER['REQUEST_PARAMS'] = str_replace(array('?','&','='),'-',(($temp = strpos($_SERVER['REQUEST_PARAMS'],'=')) ? substr($_SERVER['REQUEST_PARAMS'],0,$temp).str_replace('-','%2d',substr($_SERVER['REQUEST_PARAMS'],$temp)) : $_SERVER['REQUEST_PARAMS'])); //Super advanced filtering :-)	$matches = explode('-',$_SERVER['REQUEST_PARAMS']); //Handle "?foo=bar", "-foo-bar", and "-foo-bar?bar=foo" mode	if(count($matches) % 2) { //Number of params is odd - first param is assigned to "default"		$matches[0] = decrypt($matches[0],'url');		$_GET['default'] = $matches[0];		$_REQUEST['default'] = $matches[0];		array_shift($matches); //Remove "default" param from array	}	for($x = 0; $x < count($matches); $x += 2) {		$matches[$x+1] = decrypt($matches[$x+1],'url');		$_GET[$matches[$x]] = $matches[($x+1)];		$_REQUEST[$matches[$x]] = $matches[($x+1)];	}}//****************************** 404 Check *********************************if(!$_SERVER['ATI_CODE'] && !file_exists(_root.$_SERVER['REQUEST_URI'])) $_SERVER['ATI_CODE'] = '404';//******************** Dynamic Defined Constants *****************define('_inc', 			_root.'/serv/includes/');define('_mod', 			_root.'/serv/modules/');define('_folder',	 	substr($_SERVER['REQUEST_URI'],0,strpos ($_SERVER['REQUEST_URI'], "/" , 1 )));if($_SERVER['ATI_CODE']) $_SERVER['REQUEST_URI'] = '/core/sites/server/'.$_SERVER['ATI_CODE'].'.ati';if($_SERVER['SITE']) {	define('_site', _root.'/core/sites/server');}else {	define('_site', 		_root.'/serv/sites/'.$_SERVER['site']);	define('_fnc', 			_site.'/_functions/');	define('_templates',	_site.'/_templates');	if($_SERVER['HTTP_HOST'] != $_SERVER['site']) {		if(file_exists(_root.'/serv/sites/'.$_SERVER['HTTP_HOST'])) 			define('_alias', _root.'/serv/sites/'.$_SERVER['HTTP_HOST']);		else if(file_exists(_root.'/serv/sites/'.$_SERVER['HTTP_HOST_TOP'])) 	define('_alias', _root.'/serv/sites/'.$_SERVER['HTTP_HOST_TOP']);	}}//********************** Load Site Settings **********************if(file_exists(_site.'/_settings.atii')) eval('$_SERVER = array_merge_recursive($_SERVER,array('.file_get_contents(_site.'/_settings.atii').'));');if(_alias && file_exists(_alias.'/_settings.atii')) {	$temp = $_SERVER;	eval('$_SERVER = array_merge($_SERVER,array('.file_get_contents(_alias.'/_settings.atii').'));');	$_SERVER['database'] = $temp['database'];}if($_SERVER['network']) {	define('_network', 	_root.'/serv/networks/'.$_SERVER['network']);	eval('$_SERVER = array_merge_recursive($_SERVER,array('.file_get_contents(_network.'/_settings.atii').'));');}//********************* Site Defined Constants *******************if($_SERVER['constants']) foreach ($_SERVER['constants'] as $key=>$val) define($key, $val);//******************** Initialize the database *******************require _root.'/core/includes/adodb_lite/adodb.inc.php';$_SERVER['database'] += $GLOBALS['prefs']['database'];$_SERVER['serverdb'] =	ADONewConnection($_SERVER['database']['type'].'://'.$_SERVER['database']['user'].':'.$_SERVER['database']['pass'].'@'.$_SERVER['database']['host'].'/'.$_SERVER['database']['prefix'].$_SERVER['database']['serverdb'].'?forcenew'.($_SERVER['database']['socket'] ? '&socket='.$_SERVER['database']['socket'] : ''));if(!$_SERVER['serverdb']->connectionId)	error('Could not connect to database. Name: '.$_SERVER['database']['prefix'].$_SERVER['database']['serverdb'].' Host: '.$_SERVER['database']['host'].', User: '.$_SERVER['database']['user']);if($_SERVER['database']['networkdb'])		$_SERVER['networkdb'] = ADONewConnection($_SERVER['database']['type'].'://'.$_SERVER['database']['user'].':'.$_SERVER['database']['pass'].'@'.$_SERVER['database']['host'].'/'.$_SERVER['database']['prefix'].$_SERVER['database']['networkdb'].'?forcenew'.($_SERVER['database']['socket'] ? '&socket='.$_SERVER['database']['socket'] : ''));if($_SERVER['database']['sitedb'])		$_SERVER['db'] = ADONewConnection($_SERVER['database']['type'].'://'.$_SERVER['database']['user'].':'.$_SERVER['database']['pass'].'@'.$_SERVER['database']['host'].'/'.$_SERVER['database']['prefix'].$_SERVER['database']['sitedb'].'?forcenew'.($_SERVER['database']['socket'] ? '&socket='.$_SERVER['database']['socket'] : ''));//************************ Advanced Stuff ************************if(!$GLOBALS['prefs']['simple']) {		//************************* Session Management! *************************				if(!$_REQUEST['sessionforceguest'] && strlen($_COOKIE['atid']) > 32) { //A member is logging in with a cookie    	$isPermanent = (substr($_COOKIE['atid'], 0, 4) === 'perm');    	if($isPermanent) $_COOKIE['atid'] = substr($_COOKIE['atid'], 4);		$user = renderUser(substr($_COOKIE['atid'],32),'member',true);		if($_COOKIE['atid'] == md5($user['userPassword'].$user['userSignupDate']).$user['userId']) $_SESSION = $user; //LOG THEM IN!!!!!!!!!		if($isPermanent) $_SESSION['isPermanent'] = true;	}		//A guest is logging in with a cookie	if(!$_SESSION && $_COOKIE['atid']) $_SESSION = renderUser($_COOKIE['atid'],'guest',true);		//A guest is logging in with an ip address	if(!$_SESSION) $_SESSION = renderUser($_SERVER['REMOTE_ADDR'],'guest,ip',true);		//They are a first time user	if(!$_SESSION) {   //assign a session id to first time users!		$_SESSION['userId'] = random('unique');		$_SESSION['userPower'] = 0.00;		$_SESSION['userSignupDate'] = time();		$_SESSION['sessionCookie'] = $_SESSION['userId'];		$_SESSION['template'] = 'pc';	}		//update other session  variables	$_SESSION += renderUserLocation(); //set location based variables	$_SESSION['userIp'] = $_SERVER['REMOTE_ADDR'];		//******************* Actions controlled by get variables *****************		$temp = 0;	if($_REQUEST['showpagedebuginfo']) $_SESSION['showPageDebugInfo'] = 1;	else if($_REQUEST['hidepagedebuginfo']) $_SESSION['showPageDebugInfo'] = 0;	else if ($_REQUEST['settpl']) $_SESSION['template'] = $_REQUEST['settpl'];	else if ($_REQUEST['setskin']) $_SESSION['userSkin'] = $_REQUEST['setskin'];	else $temp = 1;		if($temp == 0) {		setPagePref('deadEndPage');		redirect($_SESSION['lastPage']); //Action performed, so redirect them!	}		//*********************** Page initilization ***********************		if(file_exists(_alias."/_pre.atii")) 			require_once _alias."/_pre.atii";	if(file_exists(_site."/_pre.atii")) 			require_once _site."/_pre.atii";		//************************* Advanced Templating! ***************************		//Initialize templates and skins	if(!$_SESSION['template']) $_SESSION['template'] = $GLOBALS['prefs']['templates']['default'];	if($_REQUEST['tpl']) 	$_SERVER['template'] = $_REQUEST['tpl'];	else $_SERVER['template'] = $_SESSION['template'];	if($_REQUEST['skin'])	$_SERVER['skin'] = $_REQUEST['skin'];	if(!$_SESSION['userSkin']) $_SESSION['userSkin'] = 3;	if(is_array($_SERVER['skin'])) $_SERVER['skin'] = $_SERVER['skin'][0];	if($_SERVER['skin'] == 'auto')	$_SERVER['skin'] = $_SESSION['userSkin'];	define('_skin',			$_SERVER['skin']);		//Init "page" template vars = they must be defined for each core template so the templating engine knows which template assigned variables need to be stuffed back into the pages array for the next template down the line!	$temp = $GLOBALS['pageVars']['page'];	$GLOBALS['pageVars']['page'] = $GLOBALS['prefs']['templates'][($GLOBALS['prefs']['templates'][$_SERVER['template']] ? $GLOBALS['prefs']['templates'][$_SERVER['template']] : 'simple')]['vars'];	if($temp) $GLOBALS['pageVars']['page'] = array_merge($GLOBALS['pageVars']['page'],$temp);	$tplDefs = array();	$tplVars = array();		//Include templating functions and prefs	if($GLOBALS['prefs']['templates'][$_SERVER['template']] && _skin && file_exists(_root.'/serv/skins/'.$_SERVER['template'].'/'._skin.'/_functions.atit')) include_once(_root.'/serv/skins/'.$_SERVER['template'].'/'._skin.'/_functions.atit');	else if(_skin && file_exists(_site.'/tpl/'.$_SERVER['template'].'/_functions.atit')) include_once(_site.'/tpl/'.$_SERVER['template'].'/_functions.atit');		if($GLOBALS['prefs']['templates'][$_SERVER['template']] && file_exists(_site.'/tpl/'.$_SERVER['template'].'/_functions.atit')) include_once(_site.'/tpl/'.$_SERVER['template'].'/_functions.atit');	else if(file_exists(_site.'/tpl/pc/_functions.atit')) include_once(_site.'/tpl/pc/_functions.atit');	else if(file_exists(_site.'/_functions.atit')) include_once(_site.'/_functions.atit');		if(_network && $GLOBALS['prefs']['templates'][$_SERVER['template']] && file_exists(_network.'/'.$_SERVER['template'].'/_functions.atit')) include_once(_network.'/'.$_SERVER['template'].'/_functions.atit');	else if(_network && file_exists(_network.'/pc/_functions.atit')) include_once(_network.'/pc/_functions.atit');		if($GLOBALS['prefs']['templates'][$_SERVER['template']]) include_once(_root.'/core/sites/tpl/'.$_SERVER['template'].'/_functions.atit');	else if(file_exists(_root.'/core/sites/tpl/pc/_functions.atit')) include_once(_root.'/core/sites/tpl/pc/_functions.atit');		if($GLOBALS['prefs']['templates'][$GLOBALS['prefs']['templates'][$_SERVER['template']]]['defs']) $tplDefs += $GLOBALS['prefs']['templates'][$GLOBALS['prefs']['templates'][$_SERVER['template']]]['defs'];	$GLOBALS['prefs']['templates'][$GLOBALS['prefs']['templates'][$_SERVER['template']]]['defs'] = $tplDefs; //setPageBlock uses this variable to determine the location to set the values to, so update it with all the defaults added through _functions.atit and $_SERVER	$tplVars = array_merge($_SERVER['tplVars'],$GLOBALS['pageVars']['page'],$tplVars);}//************************* Simple Templating ***************************else {	if($_REQUEST['tpl'])	$_SERVER['template'] = $_REQUEST['tpl']; // No default template - if page wants template let it assign it	$GLOBALS['pageVars']['page'] = $GLOBALS['prefs']['templates']['simple']['vars'];	$tplDefs = &$GLOBALS['prefs']['templates']['simple']['defs'];	$tplVars = &$GLOBALS['pageVars']['page'];	if(!is_array($tplDefs)) $tplDefs = array();	if(!is_array($tplVars)) $tplVars = array();}//**************************** User is Banned *****************************if($_SESSION['banMessage'] != null) {	$_SESSION['pageMessage'] = $_SESSION['banMessage'];	buildPage();}//**************************** Include the Page!!!!! ***********************require _root.$_SERVER['REQUEST_URI'];//**************************** Build the Page!!!!! *************************buildPage(); //You might be wondering why the contents of buildPage() isn't right here... This is because the page contents might want to end early... This could be done with return(), but then it would not work inside functions inside the page...?>